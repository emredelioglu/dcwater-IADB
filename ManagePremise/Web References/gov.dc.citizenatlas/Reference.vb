'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace gov.dc.citizenatlas
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="LocationVerifierSoap", [Namespace]:="http://tempuri.org/newWebServices/LocationVerifier")>  _
    Partial Public Class LocationVerifier
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private verifyDCAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private verifyDCAddress1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private findOutsideLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findInOutsideLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findDCIntersectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findDCIntersection1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private findBlockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findBlock1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private findAddFromSSLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findAddFromPlaceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findAIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findRdWySegIDFromMiniMARIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findDCBlkFromIntersectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findMARIDFromMiniMARIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findMiniMARIDFromMARIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private reverseGeocodingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private submitAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findAddFromSSL_newOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findSSLFromAIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindCondoUnitFromAIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findAliasFromAIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findOwnerFromSSLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findSSLFromSquareSuffixOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindUnitFromAIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.IAIS.My.MySettings.Default.IAIS_gov_dc_citizenatlas_LocationVerifier
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event verifyDCAddressCompleted As verifyDCAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event verifyDCAddress1Completed As verifyDCAddress1CompletedEventHandler
        
        '''<remarks/>
        Public Event findOutsideLocationCompleted As findOutsideLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event findInOutsideLocationCompleted As findInOutsideLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event findDCIntersectionCompleted As findDCIntersectionCompletedEventHandler
        
        '''<remarks/>
        Public Event findDCIntersection1Completed As findDCIntersection1CompletedEventHandler
        
        '''<remarks/>
        Public Event findBlockCompleted As findBlockCompletedEventHandler
        
        '''<remarks/>
        Public Event findBlock1Completed As findBlock1CompletedEventHandler
        
        '''<remarks/>
        Public Event findAddFromSSLCompleted As findAddFromSSLCompletedEventHandler
        
        '''<remarks/>
        Public Event findAddFromPlaceCompleted As findAddFromPlaceCompletedEventHandler
        
        '''<remarks/>
        Public Event findAIDCompleted As findAIDCompletedEventHandler
        
        '''<remarks/>
        Public Event findLocationCompleted As findLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event findRdWySegIDFromMiniMARIDCompleted As findRdWySegIDFromMiniMARIDCompletedEventHandler
        
        '''<remarks/>
        Public Event findDCBlkFromIntersectionCompleted As findDCBlkFromIntersectionCompletedEventHandler
        
        '''<remarks/>
        Public Event findMARIDFromMiniMARIDCompleted As findMARIDFromMiniMARIDCompletedEventHandler
        
        '''<remarks/>
        Public Event findMiniMARIDFromMARIDCompleted As findMiniMARIDFromMARIDCompletedEventHandler
        
        '''<remarks/>
        Public Event reverseGeocodingCompleted As reverseGeocodingCompletedEventHandler
        
        '''<remarks/>
        Public Event submitAddressCompleted As submitAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event findAddFromSSL_newCompleted As findAddFromSSL_newCompletedEventHandler
        
        '''<remarks/>
        Public Event findSSLFromAIDCompleted As findSSLFromAIDCompletedEventHandler
        
        '''<remarks/>
        Public Event FindCondoUnitFromAIDCompleted As FindCondoUnitFromAIDCompletedEventHandler
        
        '''<remarks/>
        Public Event findAliasFromAIDCompleted As findAliasFromAIDCompletedEventHandler
        
        '''<remarks/>
        Public Event findOwnerFromSSLCompleted As findOwnerFromSSLCompletedEventHandler
        
        '''<remarks/>
        Public Event findSSLFromSquareSuffixCompleted As findSSLFromSquareSuffixCompletedEventHandler
        
        '''<remarks/>
        Public Event FindUnitFromAIDCompleted As FindUnitFromAIDCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/verifyDCAddressThrouString", RequestElementName:="verifyDCAddressThrouString", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseElementName:="verifyDCAddressThrouStringResponse", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function verifyDCAddress(ByVal Address As String) As <System.Xml.Serialization.XmlElementAttribute("verifyDCAddressThrouStringResult")> ReturnObject
            Dim results() As Object = Me.Invoke("verifyDCAddress", New Object() {Address})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub verifyDCAddressAsync(ByVal Address As String)
            Me.verifyDCAddressAsync(Address, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub verifyDCAddressAsync(ByVal Address As String, ByVal userState As Object)
            If (Me.verifyDCAddressOperationCompleted Is Nothing) Then
                Me.verifyDCAddressOperationCompleted = AddressOf Me.OnverifyDCAddressOperationCompleted
            End If
            Me.InvokeAsync("verifyDCAddress", New Object() {Address}, Me.verifyDCAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnverifyDCAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.verifyDCAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent verifyDCAddressCompleted(Me, New verifyDCAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="verifyDCAddress1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/verifyDCAddressThrouComponents"& _ 
            "", RequestElementName:="verifyDCAddressThrouComponents", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseElementName:="verifyDCAddressThrouComponentsResponse", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function verifyDCAddress(ByVal AddNumber As String, ByVal AddNumberSuffix As String, ByVal StName As String, ByVal StType As String, ByVal Quad As String) As <System.Xml.Serialization.XmlElementAttribute("verifyDCAddressThrouComponentsResult")> ReturnObject
            Dim results() As Object = Me.Invoke("verifyDCAddress1", New Object() {AddNumber, AddNumberSuffix, StName, StType, Quad})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub verifyDCAddress1Async(ByVal AddNumber As String, ByVal AddNumberSuffix As String, ByVal StName As String, ByVal StType As String, ByVal Quad As String)
            Me.verifyDCAddress1Async(AddNumber, AddNumberSuffix, StName, StType, Quad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub verifyDCAddress1Async(ByVal AddNumber As String, ByVal AddNumberSuffix As String, ByVal StName As String, ByVal StType As String, ByVal Quad As String, ByVal userState As Object)
            If (Me.verifyDCAddress1OperationCompleted Is Nothing) Then
                Me.verifyDCAddress1OperationCompleted = AddressOf Me.OnverifyDCAddress1OperationCompleted
            End If
            Me.InvokeAsync("verifyDCAddress1", New Object() {AddNumber, AddNumberSuffix, StName, StType, Quad}, Me.verifyDCAddress1OperationCompleted, userState)
        End Sub
        
        Private Sub OnverifyDCAddress1OperationCompleted(ByVal arg As Object)
            If (Not (Me.verifyDCAddress1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent verifyDCAddress1Completed(Me, New verifyDCAddress1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findOutsideLocation", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findOutsideLocation(ByVal Location As String, ByVal City As String, ByVal State As String, ByVal Zipcode As String) As ReturnObject
            Dim results() As Object = Me.Invoke("findOutsideLocation", New Object() {Location, City, State, Zipcode})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findOutsideLocationAsync(ByVal Location As String, ByVal City As String, ByVal State As String, ByVal Zipcode As String)
            Me.findOutsideLocationAsync(Location, City, State, Zipcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findOutsideLocationAsync(ByVal Location As String, ByVal City As String, ByVal State As String, ByVal Zipcode As String, ByVal userState As Object)
            If (Me.findOutsideLocationOperationCompleted Is Nothing) Then
                Me.findOutsideLocationOperationCompleted = AddressOf Me.OnfindOutsideLocationOperationCompleted
            End If
            Me.InvokeAsync("findOutsideLocation", New Object() {Location, City, State, Zipcode}, Me.findOutsideLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindOutsideLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.findOutsideLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findOutsideLocationCompleted(Me, New findOutsideLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findInOutsideLocation", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findInOutsideLocation(ByVal Location As String, ByVal City As String, ByVal State As String, ByVal Zipcode As String) As ReturnObject
            Dim results() As Object = Me.Invoke("findInOutsideLocation", New Object() {Location, City, State, Zipcode})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findInOutsideLocationAsync(ByVal Location As String, ByVal City As String, ByVal State As String, ByVal Zipcode As String)
            Me.findInOutsideLocationAsync(Location, City, State, Zipcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findInOutsideLocationAsync(ByVal Location As String, ByVal City As String, ByVal State As String, ByVal Zipcode As String, ByVal userState As Object)
            If (Me.findInOutsideLocationOperationCompleted Is Nothing) Then
                Me.findInOutsideLocationOperationCompleted = AddressOf Me.OnfindInOutsideLocationOperationCompleted
            End If
            Me.InvokeAsync("findInOutsideLocation", New Object() {Location, City, State, Zipcode}, Me.findInOutsideLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindInOutsideLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.findInOutsideLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findInOutsideLocationCompleted(Me, New findInOutsideLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouString", RequestElementName:="findDCInterThrouString", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseElementName:="findDCInterThrouStringResponse", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function findDCIntersection(ByVal Intersection As String) As <System.Xml.Serialization.XmlElementAttribute("findDCInterThrouStringResult")> ReturnObject
            Dim results() As Object = Me.Invoke("findDCIntersection", New Object() {Intersection})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findDCIntersectionAsync(ByVal Intersection As String)
            Me.findDCIntersectionAsync(Intersection, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findDCIntersectionAsync(ByVal Intersection As String, ByVal userState As Object)
            If (Me.findDCIntersectionOperationCompleted Is Nothing) Then
                Me.findDCIntersectionOperationCompleted = AddressOf Me.OnfindDCIntersectionOperationCompleted
            End If
            Me.InvokeAsync("findDCIntersection", New Object() {Intersection}, Me.findDCIntersectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindDCIntersectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.findDCIntersectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findDCIntersectionCompleted(Me, New findDCIntersectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="findDCIntersection1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findDCInterThrouComponents", RequestElementName:="findDCInterThrouComponents", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseElementName:="findDCInterThrouComponentsResponse", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function findDCIntersection(ByVal crossstreet1 As String, ByVal crossstreet2 As String) As <System.Xml.Serialization.XmlElementAttribute("findDCInterThrouComponentsResult")> ReturnObject
            Dim results() As Object = Me.Invoke("findDCIntersection1", New Object() {crossstreet1, crossstreet2})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findDCIntersection1Async(ByVal crossstreet1 As String, ByVal crossstreet2 As String)
            Me.findDCIntersection1Async(crossstreet1, crossstreet2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findDCIntersection1Async(ByVal crossstreet1 As String, ByVal crossstreet2 As String, ByVal userState As Object)
            If (Me.findDCIntersection1OperationCompleted Is Nothing) Then
                Me.findDCIntersection1OperationCompleted = AddressOf Me.OnfindDCIntersection1OperationCompleted
            End If
            Me.InvokeAsync("findDCIntersection1", New Object() {crossstreet1, crossstreet2}, Me.findDCIntersection1OperationCompleted, userState)
        End Sub
        
        Private Sub OnfindDCIntersection1OperationCompleted(ByVal arg As Object)
            If (Not (Me.findDCIntersection1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findDCIntersection1Completed(Me, New findDCIntersection1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findDCBlkThrouString", RequestElementName:="findDCBlkThrouString", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseElementName:="findDCBlkThrouStringResponse", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function findBlock(ByVal Block As String) As <System.Xml.Serialization.XmlElementAttribute("findDCBlkThrouStringResult")> ReturnObject
            Dim results() As Object = Me.Invoke("findBlock", New Object() {Block})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findBlockAsync(ByVal Block As String)
            Me.findBlockAsync(Block, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findBlockAsync(ByVal Block As String, ByVal userState As Object)
            If (Me.findBlockOperationCompleted Is Nothing) Then
                Me.findBlockOperationCompleted = AddressOf Me.OnfindBlockOperationCompleted
            End If
            Me.InvokeAsync("findBlock", New Object() {Block}, Me.findBlockOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindBlockOperationCompleted(ByVal arg As Object)
            If (Not (Me.findBlockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findBlockCompleted(Me, New findBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="findBlock1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findDCBlkThrouComponents", RequestElementName:="findDCBlkThrouComponents", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseElementName:="findDCBlkThrouComponentsResponse", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function findBlock(ByVal onstreet As String, ByVal fromstreet As String, ByVal tostreet As String) As <System.Xml.Serialization.XmlElementAttribute("findDCBlkThrouComponentsResult")> ReturnObject
            Dim results() As Object = Me.Invoke("findBlock1", New Object() {onstreet, fromstreet, tostreet})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findBlock1Async(ByVal onstreet As String, ByVal fromstreet As String, ByVal tostreet As String)
            Me.findBlock1Async(onstreet, fromstreet, tostreet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findBlock1Async(ByVal onstreet As String, ByVal fromstreet As String, ByVal tostreet As String, ByVal userState As Object)
            If (Me.findBlock1OperationCompleted Is Nothing) Then
                Me.findBlock1OperationCompleted = AddressOf Me.OnfindBlock1OperationCompleted
            End If
            Me.InvokeAsync("findBlock1", New Object() {onstreet, fromstreet, tostreet}, Me.findBlock1OperationCompleted, userState)
        End Sub
        
        Private Sub OnfindBlock1OperationCompleted(ByVal arg As Object)
            If (Not (Me.findBlock1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findBlock1Completed(Me, New findBlock1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findAddFromSSL", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findAddFromSSL(ByVal Square As String, ByVal Suffix As String, ByVal Lot As String) As ReturnObject
            Dim results() As Object = Me.Invoke("findAddFromSSL", New Object() {Square, Suffix, Lot})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findAddFromSSLAsync(ByVal Square As String, ByVal Suffix As String, ByVal Lot As String)
            Me.findAddFromSSLAsync(Square, Suffix, Lot, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findAddFromSSLAsync(ByVal Square As String, ByVal Suffix As String, ByVal Lot As String, ByVal userState As Object)
            If (Me.findAddFromSSLOperationCompleted Is Nothing) Then
                Me.findAddFromSSLOperationCompleted = AddressOf Me.OnfindAddFromSSLOperationCompleted
            End If
            Me.InvokeAsync("findAddFromSSL", New Object() {Square, Suffix, Lot}, Me.findAddFromSSLOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindAddFromSSLOperationCompleted(ByVal arg As Object)
            If (Not (Me.findAddFromSSLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findAddFromSSLCompleted(Me, New findAddFromSSLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findAddFromPlace", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findAddFromPlace(ByVal Place As String) As ReturnObject
            Dim results() As Object = Me.Invoke("findAddFromPlace", New Object() {Place})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findAddFromPlaceAsync(ByVal Place As String)
            Me.findAddFromPlaceAsync(Place, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findAddFromPlaceAsync(ByVal Place As String, ByVal userState As Object)
            If (Me.findAddFromPlaceOperationCompleted Is Nothing) Then
                Me.findAddFromPlaceOperationCompleted = AddressOf Me.OnfindAddFromPlaceOperationCompleted
            End If
            Me.InvokeAsync("findAddFromPlace", New Object() {Place}, Me.findAddFromPlaceOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindAddFromPlaceOperationCompleted(ByVal arg As Object)
            If (Not (Me.findAddFromPlaceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findAddFromPlaceCompleted(Me, New findAddFromPlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findAID", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findAID(ByVal AID As String) As ReturnObject
            Dim results() As Object = Me.Invoke("findAID", New Object() {AID})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findAIDAsync(ByVal AID As String)
            Me.findAIDAsync(AID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findAIDAsync(ByVal AID As String, ByVal userState As Object)
            If (Me.findAIDOperationCompleted Is Nothing) Then
                Me.findAIDOperationCompleted = AddressOf Me.OnfindAIDOperationCompleted
            End If
            Me.InvokeAsync("findAID", New Object() {AID}, Me.findAIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindAIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.findAIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findAIDCompleted(Me, New findAIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findLocation", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findLocation(ByVal str As String) As ReturnObject
            Dim results() As Object = Me.Invoke("findLocation", New Object() {str})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findLocationAsync(ByVal str As String)
            Me.findLocationAsync(str, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findLocationAsync(ByVal str As String, ByVal userState As Object)
            If (Me.findLocationOperationCompleted Is Nothing) Then
                Me.findLocationOperationCompleted = AddressOf Me.OnfindLocationOperationCompleted
            End If
            Me.InvokeAsync("findLocation", New Object() {str}, Me.findLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.findLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findLocationCompleted(Me, New findLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findRdWySegIDFromMiniMARID", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findRdWySegIDFromMiniMARID(ByVal MiniMARADDID As String) As String
            Dim results() As Object = Me.Invoke("findRdWySegIDFromMiniMARID", New Object() {MiniMARADDID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findRdWySegIDFromMiniMARIDAsync(ByVal MiniMARADDID As String)
            Me.findRdWySegIDFromMiniMARIDAsync(MiniMARADDID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findRdWySegIDFromMiniMARIDAsync(ByVal MiniMARADDID As String, ByVal userState As Object)
            If (Me.findRdWySegIDFromMiniMARIDOperationCompleted Is Nothing) Then
                Me.findRdWySegIDFromMiniMARIDOperationCompleted = AddressOf Me.OnfindRdWySegIDFromMiniMARIDOperationCompleted
            End If
            Me.InvokeAsync("findRdWySegIDFromMiniMARID", New Object() {MiniMARADDID}, Me.findRdWySegIDFromMiniMARIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindRdWySegIDFromMiniMARIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.findRdWySegIDFromMiniMARIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findRdWySegIDFromMiniMARIDCompleted(Me, New findRdWySegIDFromMiniMARIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findDCBlkFromIntersection", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findDCBlkFromIntersection(ByVal crossstreet1 As String, ByVal crossstreet2 As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("findDCBlkFromIntersection", New Object() {crossstreet1, crossstreet2})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findDCBlkFromIntersectionAsync(ByVal crossstreet1 As String, ByVal crossstreet2 As String)
            Me.findDCBlkFromIntersectionAsync(crossstreet1, crossstreet2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findDCBlkFromIntersectionAsync(ByVal crossstreet1 As String, ByVal crossstreet2 As String, ByVal userState As Object)
            If (Me.findDCBlkFromIntersectionOperationCompleted Is Nothing) Then
                Me.findDCBlkFromIntersectionOperationCompleted = AddressOf Me.OnfindDCBlkFromIntersectionOperationCompleted
            End If
            Me.InvokeAsync("findDCBlkFromIntersection", New Object() {crossstreet1, crossstreet2}, Me.findDCBlkFromIntersectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindDCBlkFromIntersectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.findDCBlkFromIntersectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findDCBlkFromIntersectionCompleted(Me, New findDCBlkFromIntersectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findMARIDFromMiniMARID", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findMARIDFromMiniMARID(ByVal minimarid As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("findMARIDFromMiniMARID", New Object() {minimarid})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findMARIDFromMiniMARIDAsync(ByVal minimarid As String)
            Me.findMARIDFromMiniMARIDAsync(minimarid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findMARIDFromMiniMARIDAsync(ByVal minimarid As String, ByVal userState As Object)
            If (Me.findMARIDFromMiniMARIDOperationCompleted Is Nothing) Then
                Me.findMARIDFromMiniMARIDOperationCompleted = AddressOf Me.OnfindMARIDFromMiniMARIDOperationCompleted
            End If
            Me.InvokeAsync("findMARIDFromMiniMARID", New Object() {minimarid}, Me.findMARIDFromMiniMARIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindMARIDFromMiniMARIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.findMARIDFromMiniMARIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findMARIDFromMiniMARIDCompleted(Me, New findMARIDFromMiniMARIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findMiniMARIDFromMARID", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findMiniMARIDFromMARID(ByVal marid As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("findMiniMARIDFromMARID", New Object() {marid})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findMiniMARIDFromMARIDAsync(ByVal marid As String)
            Me.findMiniMARIDFromMARIDAsync(marid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findMiniMARIDFromMARIDAsync(ByVal marid As String, ByVal userState As Object)
            If (Me.findMiniMARIDFromMARIDOperationCompleted Is Nothing) Then
                Me.findMiniMARIDFromMARIDOperationCompleted = AddressOf Me.OnfindMiniMARIDFromMARIDOperationCompleted
            End If
            Me.InvokeAsync("findMiniMARIDFromMARID", New Object() {marid}, Me.findMiniMARIDFromMARIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindMiniMARIDFromMARIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.findMiniMARIDFromMARIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findMiniMARIDFromMARIDCompleted(Me, New findMiniMARIDFromMARIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/reverseGeocoding", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function reverseGeocoding(ByVal x As String, ByVal y As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("reverseGeocoding", New Object() {x, y})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub reverseGeocodingAsync(ByVal x As String, ByVal y As String)
            Me.reverseGeocodingAsync(x, y, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub reverseGeocodingAsync(ByVal x As String, ByVal y As String, ByVal userState As Object)
            If (Me.reverseGeocodingOperationCompleted Is Nothing) Then
                Me.reverseGeocodingOperationCompleted = AddressOf Me.OnreverseGeocodingOperationCompleted
            End If
            Me.InvokeAsync("reverseGeocoding", New Object() {x, y}, Me.reverseGeocodingOperationCompleted, userState)
        End Sub
        
        Private Sub OnreverseGeocodingOperationCompleted(ByVal arg As Object)
            If (Not (Me.reverseGeocodingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent reverseGeocodingCompleted(Me, New reverseGeocodingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/submitAddress", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function submitAddress(ByVal address As String, ByVal name As String, ByVal agency As String, ByVal phone As String, ByVal email As String, ByVal source As String, ByVal comment As String, ByVal withVerification As String) As submitReturnObj
            Dim results() As Object = Me.Invoke("submitAddress", New Object() {address, name, agency, phone, email, source, comment, withVerification})
            Return CType(results(0),submitReturnObj)
        End Function
        
        '''<remarks/>
        Public Overloads Sub submitAddressAsync(ByVal address As String, ByVal name As String, ByVal agency As String, ByVal phone As String, ByVal email As String, ByVal source As String, ByVal comment As String, ByVal withVerification As String)
            Me.submitAddressAsync(address, name, agency, phone, email, source, comment, withVerification, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub submitAddressAsync(ByVal address As String, ByVal name As String, ByVal agency As String, ByVal phone As String, ByVal email As String, ByVal source As String, ByVal comment As String, ByVal withVerification As String, ByVal userState As Object)
            If (Me.submitAddressOperationCompleted Is Nothing) Then
                Me.submitAddressOperationCompleted = AddressOf Me.OnsubmitAddressOperationCompleted
            End If
            Me.InvokeAsync("submitAddress", New Object() {address, name, agency, phone, email, source, comment, withVerification}, Me.submitAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnsubmitAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.submitAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent submitAddressCompleted(Me, New submitAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findAddFromSSL_new", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findAddFromSSL_new(ByVal Square As String, ByVal Suffix As String, ByVal Lot As String) As ReturnObject
            Dim results() As Object = Me.Invoke("findAddFromSSL_new", New Object() {Square, Suffix, Lot})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findAddFromSSL_newAsync(ByVal Square As String, ByVal Suffix As String, ByVal Lot As String)
            Me.findAddFromSSL_newAsync(Square, Suffix, Lot, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findAddFromSSL_newAsync(ByVal Square As String, ByVal Suffix As String, ByVal Lot As String, ByVal userState As Object)
            If (Me.findAddFromSSL_newOperationCompleted Is Nothing) Then
                Me.findAddFromSSL_newOperationCompleted = AddressOf Me.OnfindAddFromSSL_newOperationCompleted
            End If
            Me.InvokeAsync("findAddFromSSL_new", New Object() {Square, Suffix, Lot}, Me.findAddFromSSL_newOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindAddFromSSL_newOperationCompleted(ByVal arg As Object)
            If (Not (Me.findAddFromSSL_newCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findAddFromSSL_newCompleted(Me, New findAddFromSSL_newCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findSSLFromAID", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findSSLFromAID(ByVal AID As String) As ReturnObject
            Dim results() As Object = Me.Invoke("findSSLFromAID", New Object() {AID})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findSSLFromAIDAsync(ByVal AID As String)
            Me.findSSLFromAIDAsync(AID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findSSLFromAIDAsync(ByVal AID As String, ByVal userState As Object)
            If (Me.findSSLFromAIDOperationCompleted Is Nothing) Then
                Me.findSSLFromAIDOperationCompleted = AddressOf Me.OnfindSSLFromAIDOperationCompleted
            End If
            Me.InvokeAsync("findSSLFromAID", New Object() {AID}, Me.findSSLFromAIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindSSLFromAIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.findSSLFromAIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findSSLFromAIDCompleted(Me, New findSSLFromAIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/FindCondoUnitFromAID", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindCondoUnitFromAID(ByVal AID As String) As ReturnObject
            Dim results() As Object = Me.Invoke("FindCondoUnitFromAID", New Object() {AID})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindCondoUnitFromAIDAsync(ByVal AID As String)
            Me.FindCondoUnitFromAIDAsync(AID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindCondoUnitFromAIDAsync(ByVal AID As String, ByVal userState As Object)
            If (Me.FindCondoUnitFromAIDOperationCompleted Is Nothing) Then
                Me.FindCondoUnitFromAIDOperationCompleted = AddressOf Me.OnFindCondoUnitFromAIDOperationCompleted
            End If
            Me.InvokeAsync("FindCondoUnitFromAID", New Object() {AID}, Me.FindCondoUnitFromAIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindCondoUnitFromAIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindCondoUnitFromAIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindCondoUnitFromAIDCompleted(Me, New FindCondoUnitFromAIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findAliasFromAID", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findAliasFromAID(ByVal AID As String) As ReturnObject
            Dim results() As Object = Me.Invoke("findAliasFromAID", New Object() {AID})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findAliasFromAIDAsync(ByVal AID As String)
            Me.findAliasFromAIDAsync(AID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findAliasFromAIDAsync(ByVal AID As String, ByVal userState As Object)
            If (Me.findAliasFromAIDOperationCompleted Is Nothing) Then
                Me.findAliasFromAIDOperationCompleted = AddressOf Me.OnfindAliasFromAIDOperationCompleted
            End If
            Me.InvokeAsync("findAliasFromAID", New Object() {AID}, Me.findAliasFromAIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindAliasFromAIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.findAliasFromAIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findAliasFromAIDCompleted(Me, New findAliasFromAIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findOwnerFromSSL", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findOwnerFromSSL(ByVal Square As String, ByVal Suffix As String, ByVal Lot As String) As ReturnObject
            Dim results() As Object = Me.Invoke("findOwnerFromSSL", New Object() {Square, Suffix, Lot})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findOwnerFromSSLAsync(ByVal Square As String, ByVal Suffix As String, ByVal Lot As String)
            Me.findOwnerFromSSLAsync(Square, Suffix, Lot, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findOwnerFromSSLAsync(ByVal Square As String, ByVal Suffix As String, ByVal Lot As String, ByVal userState As Object)
            If (Me.findOwnerFromSSLOperationCompleted Is Nothing) Then
                Me.findOwnerFromSSLOperationCompleted = AddressOf Me.OnfindOwnerFromSSLOperationCompleted
            End If
            Me.InvokeAsync("findOwnerFromSSL", New Object() {Square, Suffix, Lot}, Me.findOwnerFromSSLOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindOwnerFromSSLOperationCompleted(ByVal arg As Object)
            If (Not (Me.findOwnerFromSSLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findOwnerFromSSLCompleted(Me, New findOwnerFromSSLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/findSSLFromSquareSuffix", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findSSLFromSquareSuffix(ByVal Square As String, ByVal Suffix As String) As ReturnObject
            Dim results() As Object = Me.Invoke("findSSLFromSquareSuffix", New Object() {Square, Suffix})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findSSLFromSquareSuffixAsync(ByVal Square As String, ByVal Suffix As String)
            Me.findSSLFromSquareSuffixAsync(Square, Suffix, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findSSLFromSquareSuffixAsync(ByVal Square As String, ByVal Suffix As String, ByVal userState As Object)
            If (Me.findSSLFromSquareSuffixOperationCompleted Is Nothing) Then
                Me.findSSLFromSquareSuffixOperationCompleted = AddressOf Me.OnfindSSLFromSquareSuffixOperationCompleted
            End If
            Me.InvokeAsync("findSSLFromSquareSuffix", New Object() {Square, Suffix}, Me.findSSLFromSquareSuffixOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindSSLFromSquareSuffixOperationCompleted(ByVal arg As Object)
            If (Not (Me.findSSLFromSquareSuffixCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findSSLFromSquareSuffixCompleted(Me, New findSSLFromSquareSuffixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/newWebServices/LocationVerifier/FindUnitFromAID", RequestNamespace:="http://tempuri.org/newWebServices/LocationVerifier", ResponseNamespace:="http://tempuri.org/newWebServices/LocationVerifier", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindUnitFromAID(ByVal AID As String) As ReturnObject
            Dim results() As Object = Me.Invoke("FindUnitFromAID", New Object() {AID})
            Return CType(results(0),ReturnObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindUnitFromAIDAsync(ByVal AID As String)
            Me.FindUnitFromAIDAsync(AID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindUnitFromAIDAsync(ByVal AID As String, ByVal userState As Object)
            If (Me.FindUnitFromAIDOperationCompleted Is Nothing) Then
                Me.FindUnitFromAIDOperationCompleted = AddressOf Me.OnFindUnitFromAIDOperationCompleted
            End If
            Me.InvokeAsync("FindUnitFromAID", New Object() {AID}, Me.FindUnitFromAIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindUnitFromAIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindUnitFromAIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindUnitFromAIDCompleted(Me, New FindUnitFromAIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/newWebServices/LocationVerifier")>  _
    Partial Public Class ReturnObject
        
        Private returnCodesField As String
        
        Private detailsField As String
        
        Private returnDatasetField As System.Data.DataSet
        
        Private returnBlkAddrDatasetField As System.Data.DataSet
        
        Private returnCDDataSetField As System.Data.DataSet
        
        Private uNITField As String
        
        Private uNITNUMBERField As String
        
        Private sourceOperationField As String
        
        Private processTimeField As String
        
        '''<remarks/>
        Public Property returnCodes() As String
            Get
                Return Me.returnCodesField
            End Get
            Set
                Me.returnCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property details() As String
            Get
                Return Me.detailsField
            End Get
            Set
                Me.detailsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property returnDataset() As System.Data.DataSet
            Get
                Return Me.returnDatasetField
            End Get
            Set
                Me.returnDatasetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property returnBlkAddrDataset() As System.Data.DataSet
            Get
                Return Me.returnBlkAddrDatasetField
            End Get
            Set
                Me.returnBlkAddrDatasetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property returnCDDataSet() As System.Data.DataSet
            Get
                Return Me.returnCDDataSetField
            End Get
            Set
                Me.returnCDDataSetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UNIT() As String
            Get
                Return Me.uNITField
            End Get
            Set
                Me.uNITField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UNITNUMBER() As String
            Get
                Return Me.uNITNUMBERField
            End Get
            Set
                Me.uNITNUMBERField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property sourceOperation() As String
            Get
                Return Me.sourceOperationField
            End Get
            Set
                Me.sourceOperationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property processTime() As String
            Get
                Return Me.processTimeField
            End Get
            Set
                Me.processTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/newWebServices/LocationVerifier")>  _
    Partial Public Class submitReturnObj
        
        Private statusField As String
        
        Private ticketNumField As String
        
        '''<remarks/>
        Public Property status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ticketNum() As String
            Get
                Return Me.ticketNumField
            End Get
            Set
                Me.ticketNumField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub verifyDCAddressCompletedEventHandler(ByVal sender As Object, ByVal e As verifyDCAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class verifyDCAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub verifyDCAddress1CompletedEventHandler(ByVal sender As Object, ByVal e As verifyDCAddress1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class verifyDCAddress1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findOutsideLocationCompletedEventHandler(ByVal sender As Object, ByVal e As findOutsideLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findOutsideLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findInOutsideLocationCompletedEventHandler(ByVal sender As Object, ByVal e As findInOutsideLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findInOutsideLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findDCIntersectionCompletedEventHandler(ByVal sender As Object, ByVal e As findDCIntersectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findDCIntersectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findDCIntersection1CompletedEventHandler(ByVal sender As Object, ByVal e As findDCIntersection1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findDCIntersection1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findBlockCompletedEventHandler(ByVal sender As Object, ByVal e As findBlockCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findBlockCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findBlock1CompletedEventHandler(ByVal sender As Object, ByVal e As findBlock1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findBlock1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findAddFromSSLCompletedEventHandler(ByVal sender As Object, ByVal e As findAddFromSSLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findAddFromSSLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findAddFromPlaceCompletedEventHandler(ByVal sender As Object, ByVal e As findAddFromPlaceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findAddFromPlaceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findAIDCompletedEventHandler(ByVal sender As Object, ByVal e As findAIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findAIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findLocationCompletedEventHandler(ByVal sender As Object, ByVal e As findLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findRdWySegIDFromMiniMARIDCompletedEventHandler(ByVal sender As Object, ByVal e As findRdWySegIDFromMiniMARIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findRdWySegIDFromMiniMARIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findDCBlkFromIntersectionCompletedEventHandler(ByVal sender As Object, ByVal e As findDCBlkFromIntersectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findDCBlkFromIntersectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findMARIDFromMiniMARIDCompletedEventHandler(ByVal sender As Object, ByVal e As findMARIDFromMiniMARIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findMARIDFromMiniMARIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findMiniMARIDFromMARIDCompletedEventHandler(ByVal sender As Object, ByVal e As findMiniMARIDFromMARIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findMiniMARIDFromMARIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub reverseGeocodingCompletedEventHandler(ByVal sender As Object, ByVal e As reverseGeocodingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class reverseGeocodingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub submitAddressCompletedEventHandler(ByVal sender As Object, ByVal e As submitAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class submitAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As submitReturnObj
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),submitReturnObj)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findAddFromSSL_newCompletedEventHandler(ByVal sender As Object, ByVal e As findAddFromSSL_newCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findAddFromSSL_newCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findSSLFromAIDCompletedEventHandler(ByVal sender As Object, ByVal e As findSSLFromAIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findSSLFromAIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub FindCondoUnitFromAIDCompletedEventHandler(ByVal sender As Object, ByVal e As FindCondoUnitFromAIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindCondoUnitFromAIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findAliasFromAIDCompletedEventHandler(ByVal sender As Object, ByVal e As findAliasFromAIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findAliasFromAIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findOwnerFromSSLCompletedEventHandler(ByVal sender As Object, ByVal e As findOwnerFromSSLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findOwnerFromSSLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub findSSLFromSquareSuffixCompletedEventHandler(ByVal sender As Object, ByVal e As findSSLFromSquareSuffixCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findSSLFromSquareSuffixCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub FindUnitFromAIDCompletedEventHandler(ByVal sender As Object, ByVal e As FindUnitFromAIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindUnitFromAIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnObject)
            End Get
        End Property
    End Class
End Namespace
